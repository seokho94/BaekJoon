package Practice;

import java.util.*;

public class Q2108 { 
	static int Avg(int A[]) {
		double sum=0;
		int result = 0;
		for(int i=0; i<A.length; i++) {
			sum = sum + (double)A[i];
		}
		result = (int)Math.round((double)sum/A.length);
		return result;
	}
	static int Medium(int A[]) {
		Arrays.sort(A);
		int result = A[(int)Math.floor(A.length/2)];
		return result;
	}
	static int Freq(int A[]) {
		if(A.length==1) {
			return A[0];
		}
		int count = 0;
		int max = 0;
		int result = 0;
		int i=0, j=0;
		HashSet<Integer> hs = new HashSet<>();
		while(true) {
			if(i==A.length) {
				break;
			}
			if(A[i]==A[j]) {
				count++;
			}
			j++;
			if(j==A.length) {
				j=0;
				if(count>max) {
					hs.clear();
					hs.add(A[i]);
					max = count;
				}
				else if(count==max) {
					hs.add(A[i]);
				}
				i++;
				count=0;
			}
			
		}
		ArrayList <Integer> Num = new ArrayList<>(hs);
		Collections.sort(Num);
		if(Num.size()>1) {
			return result = Num.get(1);
		}
		return result = Num.get(0);
	}
	static int Length(int A[]) {
		Arrays.sort(A);
		int max = A[0];
		int min = A[A.length-1];
		int result = Math.abs(max-min);
		if(A.length==1) {
			result = 0;
			return result;
		}
		return result;
	}
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int num[] = new int[N];
		for(int i=0; i<N; i++) {
			num[i]=sc.nextInt();
		}
		System.out.println(Avg(num));
		System.out.println(Medium(num));
		System.out.println(Freq(num));
		System.out.println(Length(num));
	}
}
